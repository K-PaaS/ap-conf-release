#!/bin/bash

  #본 postgres_conf job은 bosh package postgres 에 맞추어 설정되어 있음 
  #타 서비스에서 사용할 경우 ap_db_conf job을 활용하여 사용하길 권장함
  postgresVersion=$(find /var/vcap/data/packages/ -name postgres-* | cut -d - -f 2 | sort -nr | head -n 1)
  PACKAGE_DIR="/var/vcap/packages/postgres-${postgresVersion}"
  JOB_DIR="/var/vcap/jobs/postgres-cce"
  STORE_DIR="/var/vcap/store/postgres-${postgresVersion}"
  DB_PORT=$(cat ${JOB_DIR}/config/postgresql.conf | grep 'port' | cut -d = -f 2 | tr -d ' ')

<% if p("cce_enable") %>

  #postgres initdb wait : max 60s (20 x 3)
  if [ ! -d $STORE_DIR ] || [ ! -f $STORE_DIR/pg_hba.conf ]; then
    sleep 20
  fi
  if [ ! -d $STORE_DIR ] || [ ! -f $STORE_DIR/pg_hba.conf ]; then
    sleep 20
  fi
  if [ ! -d $STORE_DIR ] || [ ! -f $STORE_DIR/pg_hba.conf ]; then
    sleep 20
  fi

  #[DP-05] IP 접근 제한 설정 - iptables 활용 (현버전은 가이드만 제공)
  #관리자가 VM에 접근하여 iptables 수정하도록 권장
  #자동적으로 하기 위한 방법 - /etc/hosts 에서 bosh dns ip list 추출 후 각 항목 등록
  #포트 전체 거부 : iptables -A  INPUT -p tcp --dport 포트 -j DROP
  #ex> iptables -A  INPUT -p tcp --dport 5524 -j DROP
  #포트 ip 허용 : iptables -A  INPUT -s 출발지IP -d 목적지IP -p tcp --dport 포트 -j ACCEPT
  #ex> iptables -A  INPUT -s 10.0.21.0/24 -d 10.0.21.121 -p tcp --dport 5524 -j ACCEPT

  #[DP-06] 안전한 인증 방식 설정
  cat /dev/null > ${STORE_DIR}/pg_hba.conf

  {
  echo "local   all             vcap                                    trust"
  echo "host    all             vcap            127.0.0.1/32            trust"
  echo "host    all             vcap            ::1/128                 trust"
  echo " "
  echo "local   all             all                                     scram-sha-256"
  echo "host    all             all             127.0.0.1/32            scram-sha-256"
  echo "host    all             all             ::1/128                 scram-sha-256"
  echo " "
  echo "host    all             all             0.0.0.0/0               scram-sha-256"
  } >> ${STORE_DIR}/pg_hba.conf
  echo "complete - pg_hba.conf "
  cat ${STORE_DIR}/pg_hba.conf

  #[DP-07] 안전한 암호화 알고리즘 사용 - 계정생성 전에 암호화 방식 교체
  pwEncryptionCount=`cat ${JOB_DIR}/config/postgresql.conf | grep 'password_encryption' | wc -l`
  if [ ${pwEncryptionCount} -eq "0" ] ; then
    {
    echo " "
    echo "password_encryption= 'scram-sha-256'"
    } >> ${JOB_DIR}/config/postgresql.conf
    echo "complete : password_encryption - postgresql.conf "
  fi

  #[DP-10] 로그활성화
  confCodeCount=`cat ${JOB_DIR}/config/postgresql.conf | grep 'log_min_duration_statement' | wc -l`
  if [ ${confCodeCount} -eq "0" ] ; then
    {
    echo " "
    echo "log_statement = 'all'"
    echo "log_min_duration_statement = 100"
    } >> ${JOB_DIR}/config/postgresql.conf
    echo "complete : log_statement - postgresql.conf "
  fi
  cat ${JOB_DIR}/config/postgresql.conf

<% end %>



